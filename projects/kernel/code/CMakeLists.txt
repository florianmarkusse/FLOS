cmake_minimum_required(VERSION 3.18)
set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")
project(kernel LANGUAGES C ASM)

include("../../setup.cmake")
initial_setup()

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -nostdinc -nostdlib -m64 -ffreestanding -fno-stack-protector")

add_subdirectory(util)

add_library(${EXECUTABLE_NAME} OBJECT
        "src/main.c" 
        )

target_link_libraries(${EXECUTABLE_NAME} PRIVATE util-${CMAKE_BUILD_TYPE})

add_custom_command(
        OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME}
        COMMAND ${CMAKE_LINKER} -m elf_x86_64 -T ${CMAKE_CURRENT_SOURCE_DIR}/main.ld -o ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME} $<TARGET_OBJECTS:${EXECUTABLE_NAME}>
        COMMAND objdump -M x86_64 -D ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME} > ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME}.asm
        COMMAND objdump -x ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME} > ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME}.objdump
        COMMAND_EXPAND_LISTS
        BYPRODUCTS ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME}.asm ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME}.objdump
        DEPENDS $<TARGET_OBJECTS:${EXECUTABLE_NAME}> ${CMAKE_CURRENT_SOURCE_DIR}/main.ld
        COMMENT "Linking ${EXECUTABLE_NAME}"
)

set(EXECUTABLE_NAME_BIN "${EXECUTABLE_NAME}.bin")
add_custom_command(
        OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME_BIN}
        COMMAND objcopy -O binary ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME} ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME_BIN}
        DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME}
        COMMENT "Copying binary data from ${EXECUTABLE_NAME} into ${EXECUTABLE_NAME_BIN}"
)

add_custom_target("${EXECUTABLE_NAME}-binary" ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME_BIN})
