create_abstraction_targets(abstraction-memory-virtual)

if(${ARCHITECTURE} STREQUAL "X86")
    add_project("x86")
    abstraction_add_sources(x86-memory-virtual)
    abstraction_include_interface_library(x86-configuration)
    abstraction_add_sources(x86-configuration)
    abstraction_include_interface_library(x86-memory)
    abstraction_add_sources(x86-memory)
else()
    message(FATAL_ERROR "Could not find matching lib for ${PROJECT_NAME}")
endif()

if(${ENVIRONMENT} STREQUAL "EFI")
    add_project("efi")
    abstraction_add_sources(efi-memory)
elseif(${ENVIRONMENT} STREQUAL "FREESTANDING")
    add_project("freestanding")
    abstraction_add_sources(freestanding-memory-virtual)
elseif(${ENVIRONMENT} STREQUAL "POSIX")
    # NOTE: Should not need an implementation but need to compile tests for now
    add_project("freestanding")
    abstraction_add_sources(freestanding-memory-virtual)
else()
    message(FATAL_ERROR "Could not find matching lib for ${PROJECT_NAME}")
endif()
